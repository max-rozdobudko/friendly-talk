<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:renderers="org.friendlytalk.core.presentation.renderers.*"
		xmlns:artwork="org.friendlytalk.talk.artwork.*"
		title="{this.resourceManager.getString('ft', 'Talk')}"
		viewDeactivate="viewDeactivateHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import org.friendlytalk.core.presentation.renderers.BroadcastRenderer;
			import org.friendlytalk.talk.TalkPM;
			import org.friendlytalk.settings.SettingsPopup;
			
			import spark.events.ViewNavigatorEvent;
			
			private var settings:SettingsPopup;
			
			[Bindable]
			public var model:TalkPM;
			
			private function toggleCameraPopup():void
			{
				if (!this.settings)
					this.openCameraPopup();
				else
					this.closeCameraPopup();
			}
			
			private function openCameraPopup():void
			{
				if (this.settings) return;
				
				this.settings = new SettingsPopup();
				this.settings.y = this.height * 0.6;
				this.settings.width = this.width;
				this.settings.height = this.height * 0.4;
				this.settings.open(this);
			}

			private function closeCameraPopup():void
			{
				if (!this.settings) return;
				
				this.settings.close();
				this.settings = null;
			}
			
			protected function viewDeactivateHandler(event:ViewNavigatorEvent):void
			{
				this.closeCameraPopup();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Binding destination="this.model" source="this.data as TalkPM"/>
	
	<s:states>
		<s:State name="portrait"/>
		<s:State name="landscape"/>
	</s:states>
	
	<artwork:Background width="100%" height="100%"/>
	
	<s:List left="0" right="0" top="0" bottom="0" dataProvider="{this.model.broadcasters}"
			itemRenderer="{new ClassFactory(BroadcastRenderer)}">
		<s:layout.landscape>
			<s:HorizontalLayout columnWidth="320" paddingBottom="20" paddingLeft="20"
								paddingRight="20" paddingTop="20" variableColumnWidth="false"
								verticalAlign="justify"/>
		</s:layout.landscape>
		<s:layout.portrait>
			<s:VerticalLayout horizontalAlign="justify" paddingBottom="20" paddingLeft="20"
							  paddingRight="20" paddingTop="20" rowHeight="240"
							  variableRowHeight="false"/>
		</s:layout.portrait>
	</s:List>
	
	<s:navigationContent>
		<s:Button label="Home" click="this.navigator.popView();" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="A" includeInLayout="{!this.model.room.favorite}" visible="{!this.model.room.favorite}" click="this.model.toggleFav();" />
		<s:Button label="R" includeInLayout="{this.model.room.favorite}" visible="{this.model.room.favorite}" click="this.model.toggleFav();" />
		<s:Button label="S" click="this.toggleCameraPopup();" />
	</s:actionContent>
	
	<s:titleContent>
		
	</s:titleContent>
	
	<s:viewMenuItems>
		<s:ViewMenuItem label="Mic" click="this.model.toggleMic();" />
		<s:ViewMenuItem label="Cam" click="this.model.toggleCam();" />
	</s:viewMenuItems>
	
</s:View>
