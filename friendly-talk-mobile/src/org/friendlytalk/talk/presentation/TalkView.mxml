<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:renderers="org.friendlytalk.core.presentation.renderers.*"
		xmlns:artwork="org.friendlytalk.talk.artwork.*"
		title="{this.resourceManager.getString('ft', 'Talk')}">
	
	<fx:Script>
		<![CDATA[
			import org.friendlytalk.core.presentation.renderers.BroadcastRenderer;
			import org.friendlytalk.talk.TalkPM;
			
			[Bindable]
			public var model:TalkPM;
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Binding destination="this.model" source="{this.data as TalkPM}"/>
	
	<s:states>
		<s:State name="portrait"/>
		<s:State name="landscape"/>
	</s:states>
	
	<artwork:Background width="100%" height="100%" />
	
	<!--<s:List left="0" right="0" top="0" bottom="0" dataProvider="{this.model.broadcasters}"
			itemRenderer="org.friendlytalk.core.presentation.renderers.BroadcastRenderer">
		<s:layout.landscape>
			<s:HorizontalLayout columnWidth="320" paddingBottom="20" paddingLeft="20"
								paddingRight="20" paddingTop="20" variableColumnWidth="false"
								verticalAlign="justify"/>
		</s:layout.landscape>
		<s:layout.portrait>
			<s:VerticalLayout horizontalAlign="justify" paddingBottom="20" paddingLeft="20"
							  paddingRight="20" paddingTop="20" rowHeight="240"
							  variableRowHeight="false"/>
		</s:layout.portrait>
	</s:List>-->
	
	<!--<s:DataGroup width="100%" height="100%" dataProvider="{this.model.broadcasters}"
				 itemRenderer="{new ClassFactory(BroadcastRenderer)}">
		<s:layout.landscape>
			<s:HorizontalLayout columnWidth="320" paddingBottom="20" paddingLeft="20"
								paddingRight="20" paddingTop="20"/>
		</s:layout.landscape>
		<s:layout.portrait>
			<s:VerticalLayout paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20"
							  rowHeight="240"/>
		</s:layout.portrait>
	</s:DataGroup>-->
	
</s:View>
